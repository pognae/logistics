<?xml version="1.0" encoding="UTF-8"?> 
	<configuration> 
		<!-- 로그 경로 변수 선언 --> 
		<!-- <property name="LOG_DIR" value="${user.home}/logs/app" />  -->
		<property name="LOG_DIR" value=".././logs" />   
		<property name="LOG_PATH" value="${LOG_DIR}/app.log"/> 
		
<!-- 	
		로그 레벨	
		1 ALL   사용자 정의 레벨을 포함한 모든 레벨.
		2 DEBUG debug을 위한 용도로, 일반 정보를 상세하게 출력합니다.
		3 INFO  일반적인 데이터를 출력합니다.
		4 WARN  경고성 메시지로, 에러가 아닌 처리 가능한 문제를 출력 합니다.
		5 ERROR 일반적인 에러로 처리가 반드시 필요로 하는 문제를 출력 합니다.
		6 FATAL 시스템에 심각한 문제를 일이킬 수 있는 문제를 출력합니다.
		7 OFF   로깅을 해제
 -->
 
		
		<logger name="jdbc"                level="OFF"/><!-- log4jdbc 옵션 설정 --> 
		<logger name="jdbc.connection"     level="OFF"/> <!-- connection open close 로깅 여부 -->
		<logger name="jdbc.sqlonly"        level="OFF"/><!-- SQL문만 로깅할지 여부 --> 
		<logger name="jdbc.sqltiming"      level="DEBUG"/><!-- 쿼리문 수행에 걸린 시간 로깅 -->  
		<logger name="jdbc.audit"          level="OFF"/><!-- ResultSet외 모든 JDBC 호출 정보를 로깅할지 여부 -->  
		<logger name="jdbc.resultset"      level="OFF"/><!-- ResultSet 포함 모든 JDBC 호출 정보를 로깅 -->  
		<logger name="jdbc.resultsettable" level="INFO"/><!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
		
		<logger name="com.zaxxer.hikari"              level="TRACE" /> 
		<logger name="com.zaxxer.hikari.HikariConfig" level="DEBUG"/>
				
		<!-- use Spring default values --> 
		<include resource="org/springframework/boot/logging/logback/defaults.xml"/>
		<!-- 콘솔 출력 --> 
		<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender"> 
			<encoder> 
				<pattern>${CONSOLE_LOG_PATTERN}</pattern> 
			</encoder> 
		</appender> 
		
		<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. --> 
		<logger name="jdbc.resultsettable" level="ON" additivity="false"> 
			<appender-ref ref="CONSOLE"/> 
		</logger> 
		
		<!-- Rolling File Appender --> 
		<appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOG_PATH}</file><!-- 파일 경로 -->
			<!-- 출력패턴 --> 
			<encoder> 
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%-5level] : %msg%n</pattern> 
			</encoder> 
				
			<!-- Rolling 정책 --> 
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- .gz,.zip 등을 넣으면 자동으로 일자별 로그파일 압축 --> 
				<fileNamePattern>${LOG_DIR}/app_%d{yyyy-MM-dd}_%i.log.gz</fileNamePattern> 
				<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 파일당 최고 용량 10MB --> 
				<maxFileSize>10MB</maxFileSize> 
				</timeBasedFileNamingAndTriggeringPolicy> 
					
				<!-- 일자별 로그파일 최대 보관주기(일단위) 만약 해당 설정일 이상된 파일은 자동으로 제거--> 
				<maxHistory>30</maxHistory> 
			</rollingPolicy> 
		</appender>

		<root level="WARN"> 
			<!-- DEBUG --> 
			<appender-ref ref="CONSOLE"/>   <!-- Console에 로그를 출력하고자 할 때 사용 -->
			<!-- 콘솔 출력 --> 
			<appender-ref ref="ROLLING_FILE"/>  <!-- File로 로그를 남기고자 할 때 사용 -->
			<!-- 파일 출력 --> 
		</root> 
	</configuration> 